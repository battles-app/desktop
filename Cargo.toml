[package]
name = "battles-desktop"
version = "0.0.76"
description = "Professional TikTok Live streaming tools with Elgato Stream Deck integration"
authors = ["BATTLES.app™"]
license = "BSL-1.1"
repository = "https://github.com/battles-app/desktop"
homepage = "https://battles.app"
edition = "2021"
rust-version = "1.77.2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0", features = ["config-json5"] }
embed-resource = "2.4"

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0", features = ["macos-private-api", "webview-data-url", "unstable"] }
tauri-plugin-updater = "2.0"
tokio = { version = "1.0", features = ["time", "rt", "sync", "net", "macros"] }
tokio-tungstenite = "0.23"
futures-util = "0.3"
base64 = "0.22"
urlencoding = "2.1"
lazy_static = "1.5"
parking_lot = "0.12"
shared_memory = "0.12"
chrono = "0.4"
ureq = { version = "2.10", features = ["native-tls"] }
reqwest = { version = "0.12", features = ["blocking"] }
image = "0.25"
elgato-streamdeck = "0.11.1"
imageproc = "0.25"
ab_glyph = "0.2"
dirs = "5.0"

# GStreamer - Professional video pipeline with static features (no pkg-config needed)
gstreamer = { version = "0.24", features = ["v1_20"] }
gstreamer-app = { version = "0.24", features = ["v1_20"] }
gstreamer-video = { version = "0.24", features = ["v1_20"] }
gstreamer-audio = { version = "0.24", features = ["v1_20"] }
gstreamer-sys = { version = "0.24", features = ["v1_20"] }
glib = "0.20"
tauri-plugin-cache = "0.1"

# WGPU - Modern graphics API for hardware-accelerated chroma key and compositing
wgpu = "27.0.1"
pollster = "0.3"
bytemuck = { version = "1.16", features = ["derive"] }
futures-intrusive = "0.5"
raw-window-handle = "0.6"

# DMX Lighting Control - Comprehensive device support
serialport = "4.5"              # Serial/USB DMX interfaces
hidapi = "2.6"                  # HID devices (DMXIS)
artnet_protocol = "0.3"         # Art-Net network protocol
sacn = "0.10"                   # sACN (E1.31) streaming ACN protocol
rust_dmx = "0.5"                # Generic DMX control (latest version)
mdns-sd = "0.11"                # mDNS/Bonjour for network device discovery

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.58", features = ["Win32_Graphics_Gdi", "Win32_Foundation", "Win32_UI_WindowsAndMessaging"] }

[profile.dev]
incremental = true # Compile your binary in smaller steps.

[profile.release]
strip = true  # Automatically strip symbols from the binary.
panic = "abort" # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true # Enables link to optimizations
opt-level = "z" # Optimize for binary size
debug = false # Disable debug information
rpath = false # Disable rpath
debug-assertions = false # Disable debug assertions

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
